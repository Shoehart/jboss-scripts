#!/bin/bash
set -e

if ! (( `id -u` == 0 ))
then
  echo "You must be run this script with sudo (or as root)!"
  exit
fi

force=false
while [ "$1" ]
do
  op=$1
  shift || true
  case "$op" in
    -f) force=true;;
  esac
done

BASE_DIR=`cd "$(dirname "$0")"; pwd`
source "$BASE_DIR"/common

cd "$BASE_DIR"

[ "$SUDO_USER" ] && using_sudo=true || using_sudo=false
[ -d "$JBOSS_DIR" ] && $force && {
  $using_sudo \
    && sudo -u $SUDO_USER rm -f "$JBOSS_CONFIGURED_ZIP" \
    || rm -f "$JBOSS_CONFIGURED_ZIP"
}
[ -d "$JBOSS_DIR" -a -f "$JBOSS_CONFIGURED_ZIP" ] || { 
  $using_sudo \
    && sudo -u $SUDO_USER ./jboss-install \
    || ./jboss-install;
}

echo "Removing \"$JBOSS_INSTALL_DIR/$JBOSS_DIR\" ..."
cd "$JBOSS_INSTALL_DIR" && { rm -rf "$JBOSS_DIR"; cd - > /dev/null; }

echo "Extracting \"$JBOSS_CONFIGURED_ZIP\" to \"$JBOSS_INSTALL_DIR\" ..."
unzip -q -d "$JBOSS_INSTALL_DIR" "$JBOSS_CONFIGURED_ZIP"

echo "Creating link $JBOSS_NAME on $JBOSS_INSTALL_DIR ..."
cd "$JBOSS_INSTALL_DIR" && { 
  [ -L "$JBOSS_NAME" ] && rm "$JBOSS_NAME" || rm -rf "$JBOSS_NAME"
  ln -s "$JBOSS_DIR" "$JBOSS_NAME"
  cd - > /dev/null
}

grep -q $JBOSS_USER /etc/passwd || ./jboss-useradd

echo "Configuring owner ($JBOSS_USER:$JBOSS_GROUP) for dir \"$JBOSS_INSTALL_DIR/$JBOSS_DIR\" ..."
chown -R $JBOSS_USER:$JBOSS_GROUP "$JBOSS_INSTALL_DIR/$JBOSS_DIR"

JBOSS_SYSTEMCTL_SCRIPT=${JBOSS_SYSTEMCTL_SCRIPT:-$JBOSS_INSTALL_DIR/$JBOSS_DIR/bin/init.d/jboss-eap-rhel.sh}
JBOSS_SYSTEMCTL_DESCRIPTION=${JBOSS_SYSTEMCTL_DESCRIPTION:-"$JBOSS_DIR systemctl script"}
f=/usr/lib/systemd/system/$JBOSS_NAME.service
echo "Creating \"$f\":"
cat > $f <<EOF
[Unit]
Description=$JBOSS_SYSTEMCTL_DESCRIPTION
After=NetworkManager.service

[Service]
Type=forking
ExecStart=$JBOSS_SYSTEMCTL_SCRIPT start
ExecStop=$JBOSS_SYSTEMCTL_SCRIPT  stop
ExecReload=$JBOSS_SYSTEMCTL_SCRIPT restart
Environment="JBOSS_NAME=$JBOSS_NAME"
Environment="JBOSS_USER=$JBOSS_USER"

[Install]
WantedBy=multi-user.target
EOF
#cat -n $f

echo "Reloading systemctl daemon ..."
systemctl daemon-reload
